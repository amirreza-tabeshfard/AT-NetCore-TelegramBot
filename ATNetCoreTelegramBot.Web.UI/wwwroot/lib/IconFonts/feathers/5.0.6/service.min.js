"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.wrapService=exports.normalizeServiceOptions=exports.getServiceOptions=exports.getHookMethods=exports.protectedMethods=exports.defaultServiceEvents=exports.defaultEventMap=exports.defaultServiceMethods=exports.defaultServiceArguments=exports.SERVICE=void 0;const events_1=require("events"),commons_1=require("@feathersjs/commons");function getHookMethods(t,e){const r=e["methods"];return exports.defaultServiceMethods.filter(e=>"function"==typeof t[e]&&!r.includes(e)).concat(r)}function getServiceOptions(e){return e[exports.SERVICE]}exports.SERVICE=(0,commons_1.createSymbol)("@feathersjs/service"),exports.defaultServiceArguments={find:["params"],get:["id","params"],create:["data","params"],update:["id","data","params"],patch:["id","data","params"],remove:["id","params"]},exports.defaultServiceMethods=["find","get","create","update","patch","remove"],exports.defaultEventMap={create:"created",update:"updated",patch:"patched",remove:"removed"},exports.defaultServiceEvents=Object.values(exports.defaultEventMap),exports.protectedMethods=Object.keys(Object.prototype).concat(Object.keys(events_1.EventEmitter.prototype)).concat(["all","around","before","after","error","hooks","setup","teardown","publish"]),exports.getHookMethods=getHookMethods,exports.getServiceOptions=getServiceOptions;const normalizeServiceOptions=(t,e={})=>{var{methods:r=exports.defaultServiceMethods.filter(e=>"function"==typeof t[e]),events:o=t.events||[]}=e,s=e.serviceEvents||exports.defaultServiceEvents.concat(o);return{...e,events:o,methods:r,serviceEvents:s}};function wrapService(e,t,r){if(t[exports.SERVICE])return t;var o=Object.create(t),r=(0,exports.normalizeServiceOptions)(t,r);if(0!==Object.keys(r.methods).length||[...exports.defaultServiceMethods,"setup","teardown"].some(e=>"function"==typeof t[e]))return Object.defineProperty(o,exports.SERVICE,{value:r}),o;throw new Error(`Invalid service object passed for path \`${e}\``)}exports.normalizeServiceOptions=normalizeServiceOptions,exports.wrapService=wrapService;