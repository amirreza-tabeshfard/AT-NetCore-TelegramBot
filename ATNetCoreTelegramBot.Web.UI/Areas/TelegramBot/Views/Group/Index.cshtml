@model ATNetCoreTelegramBot.ViewModels.Areas.TelegramBot.GroupViewModel

@{
    ViewData["Title"] = "Index";
    IEnumerable<ATNetCoreTelegramBot.Web.UI.Areas.TelegramBot.Infrastructure.TelegramBotPageMessage>? pageMessage = TempData["TelegramBotPageMessages"] as IEnumerable<ATNetCoreTelegramBot.Web.UI.Areas.TelegramBot.Infrastructure.TelegramBotPageMessage>;
}

@section BreadCrumbs {
    @{
        await Html.RenderPartialAsync(partialViewName: "Partials/Index/_BreadCrumbs", model: null, viewData: null);
    }
}

@{
    if (pageMessage is not null)
    {
        <div class="row">
            <div class="col-sm-12 col-md-12">
                @await Component.InvokeAsync("TelegramBotPageMessage", pageMessage)
            </div>
        </div>
    }
}

@{
    if (Model is not null)
    {
        <div class="row">
            @{
                await Html.RenderPartialAsync(partialViewName: "Partials/Index/_Widgets", model: Model, viewData: null);
                await Html.RenderPartialAsync(partialViewName: "Partials/Index/_Lists", model: Model, viewData: null);
            }
        </div>
    }
}

@section ScriptEndBody {
    <script>
        $("#SlideBasicInformation").addClass("is-expanded");
        $("#SlideBasicInformation_Main").addClass("active");
        $("#SlideBasicInformation_ViewAllGroups").addClass("active");
    </script>
}




























@*<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@{
    if (Model is not null)
        if (Model.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Ordering)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.InsertDateTime)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Ordering)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InsertDateTime)
                            </td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
}*@